import threading
import os
from telebot import TeleBot

def send_product_media(bot, chat_id, product_name, media_path, media_type="photo", delete_after=120):
    """
    Envoie une image ou une vid√©o avec une l√©gende et la supprime apr√®s `delete_after` secondes.
    
    :param bot: Instance du bot Telegram
    :param chat_id: ID du chat o√π envoyer le m√©dia
    :param product_name: Nom du produit pour la l√©gende
    :param media_path: Chemin du fichier m√©dia
    :param media_type: "photo" pour une image, "video" pour une vid√©o
    :param delete_after: Dur√©e avant suppression en secondes (120s = 2min par d√©faut)
    """
    if not os.path.exists(media_path):
        bot.send_message(chat_id, f"‚ùå {media_type.capitalize()} non disponible.")
        return

    with open(media_path, "rb") as media:
        if media_type == "photo":
            sent_message = bot.send_photo(chat_id, media, caption=f"üì∑ {product_name}")
        elif media_type == "video":
            sent_message = bot.send_video(chat_id, media, caption=f"üé• {product_name}")
        else:
            bot.send_message(chat_id, "‚ùå Type de m√©dia non support√©.")
            return

    # Timer pour suppression apr√®s `delete_after` secondes
    threading.Timer(delete_after, delete_message, args=[bot, chat_id, sent_message.message_id]).start()


def delete_message(bot, chat_id, message_id):
    """
    Supprime un message apr√®s un d√©lai.
    """
    try:
        bot.delete_message(chat_id, message_id)
        print(f"‚úÖ Message {message_id} supprim√© dans le chat {chat_id}.")
    except Exception as e:
        print(f"‚ùå Erreur lors de la suppression du message {message_id} : {e}")
